<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.jxc.dao.PurchaseListDao">
    <insert id="save" useGeneratedKeys="true" keyProperty="purchaseListId" keyColumn="purchase_list_id">
        INSERT INTO t_purchase_list (purchase_number, amount_paid, amount_payable, purchase_date,
                                     remarks, state, supplier_id, user_id)
        VALUES (#{purchaseNumber}, #{amountPaid}, #{amountPayable}, #{purchaseDate}, #{remarks}, #{state},
                #{supplierId}, #{userId})
    </insert>
    <update id="updateState">
        UPDATE t_purchase_list
        SET state = 1
        WHERE purchase_list_id = #{purchaseListId}
    </update>
    <delete id="deleteById">
        DELETE
        FROM t_purchase_list
        WHERE purchase_list_id = #{purchaseListId}
    </delete>
    <select id="list" resultType="com.atguigu.jxc.entity.PurchaseList">
        SELECT pl.*, u.true_name, s.supplier_name
        FROM `t_purchase_list` pl
        JOIN t_user u
        USING (user_id)
        JOIN t_supplier s
        USING (supplier_id)
        <where>
            DATE_FORMAT(pl.purchase_date, '%Y-%m-%d') &gt;= DATE_FORMAT(#{sTime}, '%Y-%m-%d')
            AND DATE_FORMAT(pl.purchase_date, '%Y-%m-%d') &lt;= DATE_FORMAT(#{eTime}, '%Y-%m-%d')
            <if test="purchaseNumber != null and purchaseNumber != ''">
                AND pl.purchase_number LIKE CONCAT('%', #{purchaseNumber}, '%')
            </if>
            <if test="supplierId != null and supplierId != ''">
                AND pl.supplier_id = #{supplierId}
            </if>
            <if test="state != null and state != ''">
                AND pl.state = #{state}
            </if>
        </where>
    </select>
    <select id="purchaseStatistics" resultType="com.atguigu.jxc.domain.PurchaseAndReturnStatistics">
        SELECT
        pl.purchase_number `number`,
        pl.purchase_date `date`,
        s.supplier_name,
        pg.goods_code `code`,
        pg.goods_name `name`,
        pg.goods_model model,
        gt.goods_type_name goods_type,
        pg.goods_unit unit,
        pg.price,
        pg.goods_num num,
        pg.total
        FROM `t_purchase_list` pl
        JOIN `t_supplier` s
        USING (supplier_id)
        JOIN `t_purchase_list_goods` pg
        USING (purchase_list_id)
        JOIN `t_goods_type` gt
        USING (goods_type_id)
        <where>
            DATE_FORMAT(pl.purchase_date, '%Y-%m-%d') &gt;= DATE_FORMAT(#{sTime}, '%Y-%m-%d')
            AND DATE_FORMAT(pl.purchase_date, '%Y-%m-%d') &lt;= DATE_FORMAT(#{eTime}, '%Y-%m-%d')
            <if test="codeOrName != null and codeOrName != ''">
                AND
                (
                pg.goods_code LIKE CONCAT('%', #{codeOrName}, '%') OR
                pg.goods_name LIKE CONCAT('%', #{codeOrName}, '%')
                )
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                AND pg.goods_type_id = #{goodsTypeId}
            </if>
        </where>
    </select>
</mapper>
